@model IEnumerable<TaskApp_Web.Models.DTO.TaskDTO>

<h2 class="animated-header">Görevlerim</h2>

<div class="mb-3 animated-button">
    <a asp-action="CalendarView" class="btn btn-primary">Takvim Görünümü</a>
</div>

<div class="table-responsive animated-table">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Başlık</th>
                <th>Bitiş Süresi</th>
                <th>Durum</th>
                <th>Öncelik</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
            {
                var timeRemaining = task.DueDate - DateTime.Now;
                var remainingSeconds = (int)timeRemaining.TotalSeconds;

                <tr class="fade-in">
                    <td>@task.Title</td>
                    <td>
                        <span id="countdown-@task.Id" data-seconds="@remainingSeconds">
                            @if (remainingSeconds > 0)
                            {
                                @($"{timeRemaining.Days} gün {timeRemaining.Hours} saat {timeRemaining.Minutes} dakika {timeRemaining.Seconds} saniye kaldı")
                            }
                            else
                            {
                                <span class="text-danger">Süre doldu</span>
                            }
                        </span>
                    </td>
                    <td>@task.Status</td>
                    <td>
                        @switch (task.Priority)
                        {
                            case TaskApp_Web.Models.TaskPriority.Dusuk:
                                @("Düşük")
                                ; break;
                            case TaskApp_Web.Models.TaskPriority.Orta:
                                @("Orta")
                                ; break;
                            case TaskApp_Web.Models.TaskPriority.Yuksek:
                                @("Yüksek")
                                ; break;
                            default:
                                @("Bilinmiyor")
                                ; break;
                        }
                    </td>
                    <td>
                        <a asp-action="TaskDetails" asp-route-id="@task.Id" class="btn btn-info task-button">Detay</a>
                        @if (task.Status == TaskApp_Web.Models.TaskStatus.Tamamlandı)
                        {
                            <button class="btn btn-disabled" disabled>Tamamlandı</button>
                        }
                        else if (task.Status == TaskApp_Web.Models.TaskStatus.Reddedildi)
                        {
                            <button class="btn btn-disabled" disabled>Reddedildi</button>
                        }
                        else if (task.Status == TaskApp_Web.Models.TaskStatus.SuresiGecti)
                        {
                            <button class="btn btn-warning" disabled>Süresi Geçti</button>
                        }
                        else
                        {
                            <form asp-action="CompleteTask" asp-route-id="@task.Id" method="post" style="display:inline;" onsubmit="return handleFormSubmit(this);">
                                <button type="submit" class="btn btn-success task-button">Tamamlandı</button>
                            </form>
                            <form asp-action="RejectTask" asp-route-id="@task.Id" method="post" style="display:inline;">
                                <button type="submit" class="btn btn-danger task-button">Reddedildi</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Tebrikler mesajı ve konfeti -->
<div id="congratulations" class="congratulations">
    <h2>Tebrikler!</h2>
</div>
<div id="confetti-container" class="confetti-container"></div>

<script>
    // Kalan süreyi her saniye güncelleyen fonksiyon
    function startCountdown(id, seconds) {
        const countdownElement = document.getElementById(id);

        function updateCountdown() {
            if (seconds <= 0) {
                countdownElement.innerHTML = '<span class="text-danger">Süre doldu</span>';
                return;
            }

            const days = Math.floor(seconds / (24 * 3600));
            const hours = Math.floor((seconds % (24 * 3600)) / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            const sec = seconds % 60;

            countdownElement.innerHTML = `${days} gün ${hours} saat ${minutes} dakika ${sec} saniye kaldı`;

            seconds--;
        }

        updateCountdown();
        setInterval(updateCountdown, 1000);
    }

    // Her bir görev için geri sayımı başlat
    document.addEventListener("DOMContentLoaded", function () {
        const countdownElements = document.querySelectorAll("[id^='countdown-']");
        countdownElements.forEach(element => {
            const seconds = parseInt(element.getAttribute("data-seconds"), 10);
            startCountdown(element.id, seconds);
        });
    });

    // Butonlara ufak bir animasyon eklemek
    document.querySelectorAll('.task-button').forEach(button => {
        button.addEventListener('mouseover', function () {
            this.classList.add('btn-animate');
        });
        button.addEventListener('mouseout', function () {
            this.classList.remove('btn-animate');
        });
    });

    // Form gönderimini engelleme, animasyonları gösterme ve sonra gönderme
    function handleFormSubmit(form) {
        disableButton(form);
        showCongratulations();
        
        // Form gönderimini 3 saniye sonra yap
        setTimeout(() => {
            form.submit();
        }, 3000);

        return false; // Formun anında gönderilmesini engelle
    }

    // Tebrikler mesajı ve konfeti gösterme
    function showCongratulations() {
        document.getElementById('congratulations').style.display = 'block';
        launchConfetti();
        setTimeout(() => {
            document.getElementById('congratulations').style.display = 'none';
        }, 3000);
    }

    // Konfeti patlaması oluşturma
    function launchConfetti() {
        const confettiContainer = document.getElementById('confetti-container');
        confettiContainer.innerHTML = ''; // Eski konfetileri temizle
        for (let i = 0; i < 100; i++) {
            const confetti = document.createElement('div');
            confetti.classList.add('confetti');
            confetti.style.left = `${Math.random() * 100}%`;
            confetti.style.animationDelay = `${Math.random() * 2}s`;
            confettiContainer.appendChild(confetti);
        }
    }

    // Butonu devre dışı bırakma ve gizleme
    function disableButton(form) {
        const button = form.querySelector('button[type="submit"]');
        button.disabled = true;
        button.style.display = 'none';
    }
</script>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
        color: #333;
        transition: background-color 0.5s ease;
    }

    h2 {
        text-align: center;
        margin-bottom: 20px;
        font-size: 28px;
        animation: slide-in 1s ease-out forwards;
    }

    .animated-header {
        animation: slide-in 1s ease-out forwards;
    }

    .animated-button {
        animation: fade-in 1.5s ease-out forwards;
    }

    .animated-table {
        animation: fade-in 2s ease-out forwards;
    }

    .table {
        width: 100%;
        margin-bottom: 20px;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    }

    .table th, .table td {
        text-align: center;
        vertical-align: middle;
        padding: 15px;
    }

    .table thead {
        background-color: #343a40;
        color: white;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f8f9fa;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef;
        transition: background-color 0.3s ease;
    }

    .fade-in {
        opacity: 0;
        animation: fade-in 1s ease-out forwards;
    }

    .btn-animate {
        transform: scale(1.1);
        transition: transform 0.2s;
    }

    .btn {
        transition: transform 0.3s, background-color 0.3s, color 0.3s;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        color: white;
        transform: scale(1.05);
    }

    .btn-success:hover {
        background-color: #28a745;
        color: white;
        transform: scale(1.05);
    }

    .btn-danger:hover {
        background-color: #dc3545;
        color: white;
        transform: scale(1.05);
    }

    .btn-warning:hover {
        background-color: #ffc107;
        color: black;
        transform: scale(1.05);
    }

    .btn-disabled {
        background-color: #6c757d;
        color: white;
        border: none;
        cursor: not-allowed;
    }

    .btn-disabled:hover {
        color: white;
    }

    .congratulations {
        display: none;
        text-align: center;
        font-size: 24px;
        color: #28a745;
        position: fixed;
        top: 20%;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        animation: fade-in 1s ease-out forwards;
    }

    .confetti-container {
        position: fixed;
        width: 100%;
        height: 100%;
        pointer-events: none;
        top: 0;
        left: 0;
        z-index: 999;
    }

    .confetti {
        position: absolute;
        width: 10px;
        height: 10px;
        background-color: #ffc107;
        opacity: 0.7;
        animation: confetti-fall 2s linear infinite;
    }

    @@keyframes slide-in {
        0% {
            opacity: 0;
            transform: translateY(-20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fade-in {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    @@keyframes confetti-fall {
        0% {
            transform: translateY(0) rotate(0deg);
            opacity: 1;
        }
        100% {
            transform: translateY(100vh) rotate(360deg);
            opacity: 0;
        }
    }
</style>
